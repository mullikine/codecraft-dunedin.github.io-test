<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>CodeCraft Dunedin</title>
    <link>https://codecraft.org.nz/</link>
    <description>Recent content on CodeCraft Dunedin</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 03 Nov 2020 00:00:00 +1300</lastBuildDate><atom:link href="https://codecraft.org.nz/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Modern Embedded Debugging Show-and-tell</title>
      <link>https://codecraft.org.nz/posts/2020-11-03-rust-embedded-debugging/</link>
      <pubDate>Tue, 03 Nov 2020 00:00:00 +1300</pubDate>
      
      <guid>https://codecraft.org.nz/posts/2020-11-03-rust-embedded-debugging/</guid>
      <description>Tools and techniques for debugging embedded systems are like anything else: a compromise between competing goals. Historically, they have been some combination of proprietary (usually expensive) and hacky, and generally lag behind those for regular computers. Debuggers are usually relatively slow, which can mean they aren&amp;rsquo;t usable for debugging in the real-time environments that embedded systems are often used in; rather than a debug_printf(&amp;quot;got here\n&amp;quot;);, it might only be practical to insert a turn_on_led(); in a suspect piece of code.</description>
    </item>
    
  </channel>
</rss>
